/*
 * LoadingWaitDialog.java
 *
 * Created on __DATE__, __TIME__
 */

package com.wangmin.dialog;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.image.BufferedImage;

import javax.swing.ImageIcon;
import javax.swing.JLabel;

import com.wangmin.utils.ResourceUtils;

/**
 *
 * @author  __USER__
 */
public class LoadingWaitDialog extends javax.swing.JDialog {

	/** Creates new form LoadingWaitDialog */
	public LoadingWaitDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		setUndecorated(true);
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 302,
				Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 192,
				Short.MAX_VALUE));

		pack();
		initUi();
	}// </editor-fold>
	
	//GEN-END:initComponents

	
	private void initUi() {
		if(image == null){
			image = new ImageIcon(ResourceUtils.loadImage("loading.gif"));
		}
		width = image.getIconWidth();
		height = image.getIconHeight(); 
		getContentPane().setBackground(Color.black);
		//setBackground(Color.WHITE);
		Font f = new Font("宋体", Font.BOLD, 20);
		FontMetrics fm = new JLabel().getFontMetrics(f);
		int height = fm.getHeight();
		
		setBounds(getX(),getY(), width, height+this.height);
		setAlwaysOnTop(true);
	}
	
	@Override
	public void paint(Graphics g) {
		//super.paint(g);
//		g.setColor(Color.WHITE);
//		g.fillRect(0, 0, getWidth(), getHeight());
		if(tempbBufferedImage == null){
			tempbBufferedImage = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_RGB);
		}
		Graphics g1 = tempbBufferedImage.getGraphics();
		if(image == null){
			image = new ImageIcon(ResourceUtils.loadImage("loading.gif"));
		}
		g1.setColor(Color.WHITE);
		g1.fillRect(0, 0, tempbBufferedImage.getWidth(), tempbBufferedImage.getHeight());
		g1.drawImage(image.getImage(), (getWidth()-width)/2, (getHeight()-height)/2, this);
		g1.setColor(Color.RED);
		Font f = new Font("宋体", Font.BOLD, 20);
		g1.setFont(f);
		FontMetrics fm = new JLabel().getFontMetrics(f);
		int stringWidth = fm.stringWidth(text);
		int height = fm.getHeight();
		int centerx = (getWidth() - stringWidth)/2;
		int centery = getHeight() - height;
		g1.drawString(text, centerx, centery);
		g.drawImage(tempbBufferedImage, 0, 0, getWidth(), getHeight(), null);
	}
	
	public void setText(String text){
		this.text = text;
	}
	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	// End of variables declaration//GEN-END:variables
	private ImageIcon image;
	private int width;
	private int height;
	private BufferedImage tempbBufferedImage;
	private String text = "正在操作，请稍后...";
	
}